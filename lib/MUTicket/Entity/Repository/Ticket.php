<?php
/**
 * MUTicket.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package MUTicket
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://www.webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.6.1 (http://modulestudio.de) at Tue Aug 27 14:55:00 CEST 2013.
 */

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;
use Doctrine\ORM\QueryBuilder;

use DoctrineExtensions\Paginate\Paginate;

/**
 * Repository class used to implement own convenience methods for performing certain DQL queries.
 *
 * This is the concrete repository class for ticket entities.
 */
class MUTicket_Entity_Repository_Ticket extends MUTicket_Entity_Repository_Base_Ticket
{
    /**
     * @var string The default sorting field/expression.
     */
    protected $defaultSortingField = 'createdDate';

    /**
     * Adds default filters as where clauses.
     *
     * @param Doctrine\ORM\QueryBuilder $qb         Query builder to be enhanced.
     * @param array                     $parameters List of determined filter options.
     *
     * @return Doctrine\ORM\QueryBuilder Enriched query builder instance.
     */
    protected function applyDefaultFilters(QueryBuilder $qb, $parameters)
    {
        $currentModule = ModUtil::getName();//FormUtil::getPassedValue('module', '', 'GETPOST');
        $currentType = FormUtil::getPassedValue('type', 'user', 'GETPOST');
        $currentFunc = FormUtil::getPassedValue('func', 'user', 'GETPOST');
        if ($currentType == 'admin' && $currentModule == 'Extensions') {
            return $qb;
        }

        if (!in_array('workflowState', array_keys($parameters)) || empty($parameters['workflowState'])) {
            // per default we show approved tickets only
            $onlineStates = array('approved');
            $qb->andWhere('tbl.workflowState IN (:onlineStates)')
            ->setParameter('onlineStates', DataUtil::formatForStore($onlineStates));
        }

        if ($currentFunc != 'rating') {
            $qb->andWhere('tbl.parent_id IS NULL');
        }

        return $qb;
    }
    
    /**
     * Builds a generic Doctrine query supporting WHERE and ORDER BY.
     *
     * @param string  $where    The where clause to use when retrieving the collection (optional) (default='').
     * @param string  $orderBy  The order-by clause to use when retrieving the collection (optional) (default='').
     * @param boolean $useJoins Whether to include joining related objects (optional) (default=true).
     * @param boolean $slimMode If activated only some basic fields are selected without using any joins (optional) (default=false).
     *
     * @return Doctrine\ORM\QueryBuilder query builder instance to be further processed
     */
    protected function _intBaseQuery($where = '', $orderBy = '', $useJoins = true, $slimMode = false)
    {
        $qb = parent::_intBaseQuery($where = '', $orderBy = '', $useJoins = true, $slimMode = false);
        
        $orderBy = 'createdDate DESC';
        $this->_intBaseQueryAddOrderBy($qb, $orderBy);
        
        return $qb;
    }
}
