<?php
/**
 * MUTicket.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package MUTicket
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://www.webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.6.1 (http://modulestudio.de) at Sat Aug 31 12:39:20 CEST 2013.
 */

/**
 * This handler class handles the page events of the Form called by the mUTicket_admin_edit() function.
 * It aims on the ticket object type.
 */
class MUTicket_Form_Handler_Admin_Ticket_Edit extends MUTicket_Form_Handler_Admin_Ticket_Base_Edit
{
    /**
     * Pre-initialise hook.
     *
     * @return void
     */
    public function preInitialize()
    {
        if (UserUtil::isLoggedIn()) {
            $uid = UserUtil::getVar('uid');
        }

        $supporterUids = 2;
        if (is_array($supporterUids)) {
            if (in_array($uid, $supporterUids)) {
                parent::preInitialize();
            }
            else {
                return 'Sorry No Supporter';
            }
        } else {
            if ($supporterUids == $uid) {
                parent::preInitialize();
            } else {
                return 'Sorry';
            }
        }

        $request = new Zikula_Request_Http();
        //$view = Zikula_View::getInstance('MUTicket');
        $kind = 'none';
        $kind = $request->query->filter('kind', 'none', FILTER_SANITIZE_STRING);

 
        $this->view->assign('editkind', $kind);


        $this->objectType = 'ticket';
        $this->objectTypeCapital = 'Ticket';
        $this->objectTypeLower = 'ticket';

        $this->hasPageLockSupport = true;
        $this->hasCategories = true;
        // array with upload fields and mandatory flags
        $this->uploadFields = array('images' => false, 'files' => false);
        // array with user fields and mandatory flags
        $this->userFields = array('owner' => false);
        // array with list fields and multiple flags
        $this->listFields = array('workflowState' => false, 'currentState' => false);
    }
    
    /**
     * Command event handler.
     *
     * This event handler is called when a command is issued by the user.
     *
     * @param Zikula_Form_View $view The form view instance.
     * @param array            $args Additional arguments.
     *
     * @return mixed Redirect or false on errors.
     */
    public function handleCommand(Zikula_Form_View $view, &$args)
    {
        $result = parent::handleCommand($view, $args);
        if ($result === false) {
            return $result;
        }
    
        return $this->view->redirect($this->getRedirectUrl($args));
    }

    /**
     * Get url to redirect to.
     *
     * @param array  $args List of arguments.
     *
     * @return string The redirect url.
     */
    protected function getRedirectUrl($args)
    {
        if ($this->inlineUsage == true) {

            $kind = $this->request->query->filter('kind', 'none', FILTER_SANITIZE_STRING);

            if ($kind == 'none') {
                $urlArgs = array('idp' => $this->idPrefix,
                        'com' => $args['commandName']);
                $urlArgs = $this->addIdentifiersToUrlArgs($urlArgs);
                // inline usage, return to special function for closing the Zikula.UI.Window instance
                return ModUtil::url($this->name, 'admin', 'handleInlineRedirect', $urlArgs);
            } else {
                return ModUtil::url($this->name, 'user', 'view' , array('ot' => 'ticket', 'state' => 2));
            }
        }
    }
}
