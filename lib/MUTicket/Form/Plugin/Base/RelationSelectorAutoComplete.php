<?php
/**
 * MUTicket.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package MUTicket
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://www.webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.6.1 (http://modulestudio.de) at Sat Aug 31 12:39:20 CEST 2013.
 */

/**
 * Relation selector plugin base class.
 */
class MUTicket_Form_Plugin_Base_RelationSelectorAutoComplete extends MUTicket_Form_Plugin_AbstractObjectSelector
{
    /**
     * Identifier prefix (unique name for JS).
     *
     * @var string
     */
    public $idPrefix = '';

    /**
     * Url for inline creation of new related items (if allowed).
     *
     * @var string
     */
    public $createLink = '';

    /**
     * Name of entity to be selected.
     *
     * @var string
     */
    public $selectedEntityName = '';

    /**
     * Whether the treated entity has an image field or not.
     *
     * @var boolean
     */
    public $withImage = false;

    /**
     * Get filename of this file.
     * The information is used to re-establish the plugins on postback.
     *
     * @return string
     */
    public function getFilename()
    {
        return __FILE__;
    }

    /**
     * Load event handler.
     *
     * @param Zikula_Form_View $view    Reference to Zikula_Form_View object.
     * @param array            &$params Parameters passed from the Smarty plugin function.
     *
     * @return void
     */
    public function load(Zikula_Form_View $view, &$params)
    {
        $this->processRequestData($view, 'GET');

        // load list items
        parent::load($view, $params);

        if (isset($params['idPrefix'])) {
            $this->idPrefix = $params['idPrefix'];
            unset($params['idPrefix']);
            $this->inputName = $this->idPrefix . 'ItemList';
        }

        if (isset($params['createLink'])) {
            $this->createLink = $params['createLink'];
            unset($params['createLink']);
        }

        if (isset($params['selectedEntityName'])) {
            $this->selectedEntityName = $params['selectedEntityName'];
            unset($params['selectedEntityName']);
        }

        if (isset($params['withImage'])) {
            $this->withImage = $params['withImage'];
            unset($params['withImage']);
        }

        // preprocess selection: collect id list for related items
        $this->preprocessIdentifiers($view, $params);
    }

    /**
     * Entry point for customised css class.
     */
    protected function getStyleClass()
    {
        return 'z-form-relationlist autocomplete';
    }

    /**
     * Render event handler.
     *
     * @param Zikula_Form_View $view Reference to Zikula_Form_View object.
     *
     * @return string The rendered output
     */
    public function render(Zikula_Form_View $view)
    {
        $dom = ZLanguage::getModuleDomain('MUTicket');
        $many = ($this->selectionMode == 'multiple');

        $entityName = $this->selectedEntityName;
        $addLinkText = $many ? __f('Add %s', array($entityName), $dom) : __f('Select %s', array($entityName), $dom);
        $selectLabelText = __f('Find %s', array($entityName), $dom);
        $searchIconText = __f('Search %s', array($entityName), $dom);

        $idPrefix = $this->idPrefix;

        $addLink = '<a id="' . $idPrefix . 'AddLink" href="javascript:void(0);" class="z-hide">' . $addLinkText . '</a>';
        $createLink = '';
        if ($this->createLink != '') {
            $createLink = '<a id="' . 'SelectorDoNew" href="' . DataUtil::formatForDisplay($this->createLink) . '" title="' . __f('Create new %s', array($entityName), $dom) . '" class="z-button muticketInlineButton">' . __('Create', $dom) . '</a>';
        }

        $alias = $this->id;

        $result = '
            <div class="muticketRelationRightSide">'
                . $addLink . '
                <div id="' . $idPrefix . 'AddFields">
                    <label for="' . $idPrefix . 'Selector">' . $selectLabelText . '</label>
                    <br />
                    <img src="/images/icons/extrasmall/search.png" width="16" height="16" alt="' . $searchIconText . '" />
                    <input type="text" name="' . $idPrefix . 'Selector" id="' . $idPrefix . 'Selector" value="" />
                    <input type="hidden" name="' . $idPrefix . 'Scope" id="' . $idPrefix . 'Scope" value="' . ((!$many) ? '0' : '1') . '" />
                    <img src="/images/ajax/indicator_circle.gif" width="16" height="16" alt="" id="' . $idPrefix . 'Indicator" style="display: none" />
                    <span id="' . $idPrefix . 'NoResultsHint" class="z-hide">' . __('No results found!', $dom) . '</span>
                    <div id="' . $idPrefix . 'SelectorChoices" class="muticketAutoComplete' . (($this->withImage) ? 'WithImage' : '') . '"></div>
                    <input type="button" id="' . $idPrefix . 'SelectorDoCancel" name="' . $idPrefix . 'SelectorDoCancel" value="' . __('Cancel', $dom) . '" class="z-button muticketInlineButton" />'
                    . $createLink . '
                    <noscript><p>' . __('This function requires JavaScript activated!', $dom) . '</p></noscript>
                </div>
            </div>';

        return $result;
    }

    /**
     * Decode event handler.
     *
     * @param Zikula_Form_View $view Reference to Zikula_Form_View object.
     *
     * @return void
     */
    public function decode(Zikula_Form_View $view)
    {
        parent::decode($view);

        // postprocess selection: reinstantiate objects for identifiers
        $this->processRequestData($view, 'POST');
    }
}
