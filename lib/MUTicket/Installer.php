<?php
/**
 * MUTicket.
 *
 * @copyright Michael Ueberschaer
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package MUTicket
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://www.webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.5.4 (http://modulestudio.de) at Thu Feb 02 13:43:18 CET 2012.
 */

/**
 * Installer implementation class
 */
class MUTicket_Installer extends MUTicket_Base_Installer
{
    public function upgrade($oldversion)
    {
    
        // Upgrade dependent on old version number
        switch ($oldversion) {
            case '1.0.0':
            	
            	$this->setVar('supporterTickets', false);
            	$this->setVar('messageNewOwner', 'Hi supporter, here you get this ticket to work for the customer by yourself.');
            	$this->setVar('messageDueDate', 'Dear Customer!  We assume that we are able to clear your ticket until the given date:');
            	
            	$rating = $this->getVar('rating');
            	if ($this->setVar('ratingAllowed', $rating)) {
            	    $this->delVar('rating');
            	}
            	
                try {
                    DoctrineHelper::updateSchema($this->entityManager, $this->listEntityClasses());
                } catch (Exception $e) {
                    if (System::isDevelopmentMode()) {
                        LogUtil::registerError($this->__('Doctrine Exception: ') . $e->getMessage());
                    }
                    return LogUtil::registerError($this->__f('An error was encountered while dropping the tables for the %s module.', array($this->getName())));
                }
                
                $ticketsrepository = MUTicket_Util_Model::getTicketRepository();
                $tickets = $ticketsrepository->selectWhere();
                
                foreach ($tickets as $ticket) {
                
                MUTicket_Util_Workflow::executeAction();
                }
                
            case '1.1.0':
                
                // later updates
        }
    

        // update successful
        return true;
    }
}
