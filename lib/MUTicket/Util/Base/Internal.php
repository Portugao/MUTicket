<?php
/**
 * MUTicket.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package MUTicket
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://www.webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.6.1 (http://modulestudio.de) at Sat Aug 31 12:39:20 CEST 2013.
 */

/**
 * Utility implementation class for workflow helper methods.
 */
class MUTicket_Util_Base_Internal extends Zikula_AbstractBase
{
    /*
     * This function handles the changing of different things of a ticket
    * for example sending email
    */
    public function handleChanges($kind, $email, $ticket)
    {
        $messagecontent = self::getContent($kind, $email, $ticket);
        self::sendMessage($messagecontent);
    }

    public function sendMessage($messagecontent)
    {
        if (!ModUtil::apiFunc('Mailer', 'user', 'sendmessage', $messagecontent)) {
            $success = false;
        }
        else {
            $success = true;
        }

    }

    public function getContent($kind, $email, $ticket)
    {
        include_once 'modules/MUTicket/templates/plugins/modifier.muticketGetCurrentStateDatas.php';

        // We get the name of the site
        $from = ModUtil::getVar('ZConfig', 'sitename') . ' ';
        // We get the adminmail
        $fromaddress = ModUtil::getVar('ZConfig', 'adminmail');

        $serviceManager = ServiceUtil::getManager();
        $handler = new Zikula_Form_View($serviceManager, 'MUTicket');

        $baseurl = System::getBaseUrl();
        $url = $baseurl . ModUtil::url('MUTicket', 'user', 'display', array('ot' => 'ticket', 'id' => $ticket['id']));

        $messagecontent = array();
        $messagecontent['from'] = $from;
        $messagecontent['fromaddress'] = $fromaddress;

        $messagecontent['toaddress'] = $email;
        if ($kind == 'supporter') {
            $messagecontent['subject'] = $handler->__('Changing of supporter for a ticket');
        }
        if ($kind == 'currentState') {
            $messagecontent['subject'] = $handler->__('Changing of current state for a ticket');
        }
        if ($kind == 'label') {
            $messagecontent['subject'] = $handler->__('Changing of labels for a ticket');
        }
        if ($kind == 'dueDate') {
            $messagecontent['subject'] = $from . ' - ' . $handler->__('Date we try to give you a feedback');
        }
        if ($kind == 'supporter') {
            $messagecontent['body'] = ModUtil::getVar('MUTicket', 'messageNewOwner') . '<br />';
        }
        if ($kind == 'currentState') {
            $messagecontent['body'] = $handler->__('To a ticket was set another current state.') . '<br />';
        }
        if ($kind == 'label') {
            $messagecontent['body'] = $handler->__('To a ticket other labels were set.') . '<br />';
        }
        if ($kind == 'dueDate') {
            if ($ticket['dueText']) {
                $datetext = $ticket['dueText'];
            } else {
                $datetext = DateUtil::formatDatetime($ticket['dueDate'], 'datebrief');
            }
            $messagecontent['body'] = ModUtil::getVar('MUTicket', 'messageDueDate') . ': ' . $datetext .'<br />';
        }

        $messagecontent['body'] .= '<h2>' . $handler->__('Title of ticket')  . ': ' . $ticket['title'] . '</h2>';
        if ($kind != 'dueDate') {
            if ($ticket['currentState'] > 0) {
                $currentState = smarty_modifier_muticketGetCurrentStateDatas($ticket['currentState'], $kind = 'message');
                $messagecontent['body'] .= $handler->__('Status of ticket') . ': ' . $currentState['title'] . '<br />' . '<br />';
            } else {
                $messagecontent['body'] .= $handler->__('Status of ticket') . ': ' . $handler->__('Not set') . '<br /><br/>';

            }
        }

        $messagecontent['body'] .= $handler->__('Visit this ticket:') . '<br />';
        $messagecontent['body'] .= '<a href="' . $url . '">' . $url . '</a><br />';
        $messagecontent['altbody'] = '';
        $messagecontent['html'] = true;

        return $messagecontent;
    }
}
