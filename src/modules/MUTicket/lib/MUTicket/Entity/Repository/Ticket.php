<?php
/**
 * MUTicket.
 *
 * @copyright Michael Ueberschaer
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package MUTicket
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://www.webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.5.2 (http://modulestudio.de) at Thu Sep 15 21:40:56 CEST 2011.
 */

/**
 * Repository class used to implement own convenience methods for performing certain DQL queries.
 *
 * This is the concrete repository class for ticket entities.
 */
class MUTicket_Entity_Repository_Ticket extends MUTicket_Entity_Repository_Base_Ticket
{
	
    /**
     * @var string The default sorting field/expression.
     */
    protected $defaultSortingField = 'createdDate';	
    
    /**
     * Select object from the database.
     *
     * @param mixed   $id       The id (or array of ids) to use to retrieve the object (optional) (default=null).
     * @param boolean $useJoins Whether to include joining related objects (optional) (default=true).
     *
     * @return array|MUTicket_Entity_Ticket retrieved data array or MUTicket_Entity_Ticket instance
     */
    public function selectById($id = 0, $useJoins = true)
    {
        // check id parameter
        if ($id == 0) {
            return LogUtil::registerArgsError();
        }

        $where = '';
        if (is_array($id)) {
            foreach ($id as $fieldName => $fieldValue) {
                if (!empty($where)) {
                    $where .= ' AND ';
                }
                $where .= 'tbl.' . DataUtil::formatForStore($fieldName) . ' = \'' . DataUtil::formatForStore($fieldValue) . '\'';
            }
        } else {
            $where .= 'tbl.id = ' . DataUtil::formatForStore($id);
        }
        
        // Only display of parent tickets
        /* TODO We need another solution
        
        $where .= ' AND ';         
        $where .= 'tbl.parent_id IS NULL'; */

        $query = $this->_intBaseQuery($where, '', $useJoins);

        $result = $query->getOneOrNullResult();
        if ($result) {
        	return $result;
        }
        else {
        	return LogUtil::registerStatus(__('Sorry! Access denied!'), ModUtil::url('MUTicket', 'user', 'view', array('ot' => 'ticket')));
        }
    }

}
